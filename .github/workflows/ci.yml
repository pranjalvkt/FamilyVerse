name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
      # ---------------- CHECKOUT ----------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------------- NODE SETUP ----------------
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            client/package-lock.json
            server/package-lock.json

      # ---------------- FRONTEND ----------------
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci || npm install

      - name: Lint frontend
        working-directory: ./client
        run: npm run lint || echo "No lint script found"

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # ---------------- BACKEND ----------------
      - name: Install backend dependencies
        working-directory: ./server
        run: npm ci || npm install

      - name: Run backend tests
        working-directory: ./server
        run: npm test || echo "No backend tests found"

      # ---------------- DEPLOY FRONTEND (VERCEL) ----------------
      - name: Deploy frontend to Vercel
        if: github.ref == 'refs/heads/main' && success()
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./client
        run: |
          echo "ðŸš€ Deploying Next.js app to Vercel..."
          npx vercel pull --yes --token=$VERCEL_TOKEN
          npx vercel build --token=$VERCEL_TOKEN
          npx vercel deploy --prebuilt --prod --yes --token=$VERCEL_TOKEN

      # ---------------- DEPLOY BACKEND (RENDER) ----------------
      - name: Deploy backend to Render
        if: github.ref == 'refs/heads/main' && success()
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "ðŸš€ Triggering Render deploy..."
          curl -X POST "$RENDER_DEPLOY_HOOK"