name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
      # Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            client/package-lock.json
            server/package-lock.json

      # Cache Next.js build
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # ---------- FRONTEND ----------
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci || npm install

      - name: Lint frontend
        working-directory: ./client
        run: npm run lint || echo "No lint script"

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # ---------- BACKEND ----------
      - name: Install backend dependencies
        working-directory: ./server
        run: npm ci || npm install

      - name: Run backend tests
        working-directory: ./server
        env:
          NODE_ENV: test
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: npm test || echo "No tests yet"

      # ---------- DEPLOYMENTS ----------
      - name: Deploy to Vercel (Frontend)
        if: github.ref == 'refs/heads/main' && success()
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client
          prod: true

      - name: Deploy to Render (Backend)
        if: github.ref == 'refs/heads/main' && success()
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "ðŸš€ Triggering Render deploy..."
          curl -X POST "$RENDER_DEPLOY_HOOK"
