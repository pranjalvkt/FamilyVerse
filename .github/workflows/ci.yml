name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
      # --------- Checkout Code ---------
      - name: Checkout repository
        uses: actions/checkout@v4

      # --------- Setup Node Environment ---------
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            client/package-lock.json
            server/package-lock.json

      # --------- FRONTEND (Next.js) ---------
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci || npm install

      - name: Lint frontend
        working-directory: ./client
        run: npm run lint || echo "No lint script"

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # --------- BACKEND (Node.js) ---------
      - name: Install backend dependencies
        working-directory: ./server
        run: npm ci || npm install

      - name: Run backend tests
        working-directory: ./server
        run: npm test || echo "No tests yet"

      # --------- DEPLOY FRONTEND to Vercel ---------
      - name: Deploy to Vercel (Frontend)
        if: github.ref == 'refs/heads/main' && success()
        run: |
          echo "ðŸš€ Deploying Next.js app to Vercel..."
          cd client
          npx vercel deploy --prod --yes --token ${{ secrets.VERCEL_TOKEN }}

      # --------- DEPLOY BACKEND to Render ---------
      - name: Deploy to Render (Backend)
        if: github.ref == 'refs/heads/main' && success()
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "ðŸš€ Triggering Render deployment..."
          curl -X POST "$RENDER_DEPLOY_HOOK"
